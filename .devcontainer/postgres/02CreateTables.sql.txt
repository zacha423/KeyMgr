-- -----------------------------------------------------------------------------
-- Filename:  02CreateTables.sql
-- Authors:   Zachary Abela-Gale
-- Date:      2023/12/19
-- Purpose:   Creates all the tables for KeyMgr's DB
-- -----------------------------------------------------------------------------

-- -----------------------------------------------------------------------------
-- Tables to represent a key authorization agreement.
-- -----------------------------------------------------------------------------
DROP TABLE IF EXISTS "KeyMgr"."rawKeyAuthStatus";
CREATE TABLE "KeyMgr"."rawKeyAuthStatus" (
  StatusID bigint NOT NULL  GENERATED ALWAYS  AS IDENTITY,
  Name text NOT NULL,
  Description text,
  PRIMARY KEY (StatusID)
);

ALTER TABLE IF EXISTS "KeyMgr"."rawKeyAuthStatus"
  OWNER TO keymgr_global;

DROP TABLE IF EXISTS "KeyMgr"."rawKeyAuthorizations";
CREATE TABLE "KeyMgr"."rawKeyAuthorizations" (
  AuthID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  Agreement text NOT NULL, -- probably needs refinement still
  StatusID bigint NOT NULL,
  KeyHolderID bigint NOT NULL,
  KeyRequestorID bigint NOT NULL,
  PRIMARY KEY (AuthID),
  CONSTRAINT KeyAuthorizations_StatusID_FK FOREIGN KEY (StatusID)
    REFERENCES "KeyMgr"."rawKeyAuthStatus" (StatusID) MATCH FULL
    ON UPDATE NO ACTION
    ON DELETE CASCADE,
  CONSTRAINT KeyAuthorizations_KeyHolderID_FK FOREIGN KEY (KeyHolderID)
    REFERENCES "KeyMgr"."rawPersons" (PersonID) MATCH FULL
    ON UPDATE NO ACTION
    ON DELETE CASCADE,
  CONSTRAINT KeyAuthorizations_KeyRequestorID_FK FOREIGN KEY (KeyRequestorID)
    REFERENCES "KeyMgr"."rawPersons" (PersonID) MATCH FULL
    ON UPDATE NO ACTION
    ON DELETE CASCADE
);

ALTER TABLE IF EXISTS "KeyMgr"."rawKeyAuthorizations"
  OWNER TO keymgr_global;

DROP TABLE IF EXISTS "KeyMgr"."rawAuthorizedKeys";
CREATE TABLE "KeyMgr"."rawAuthorizedKeys" (
  AuthID bigint NOT NULL,
  KeyID bigint NOT NULL,
  DueDate date,
  Deposit numeric (10, 4) DEFAULT 0,
  PRIMARY KEY (AuthID, KeyID),
  CONSTRAINT AuthorizedKeys_AutHID_FK FOREIGN KEY (AuthID)
    REFERENCES "KeyMgr"."rawKeyAuthorizations" (AuthID) MATCH FULL
    ON UPDATE NO ACTION
    ON DELETE CASCADE,
  CONSTRAINT AuthorizedKeys_KeyID_FK FOREIGN KEY (KeyID)
    REFERENCES "KeyMgr"."rawKeys" (KeyID) MATCH FULL
    ON UPDATE NO ACTION
    ON DELETE CASCADE
);

ALTER TABLE IF EXISTS "KeyMgr"."rawAuthorizedKeys"
  OWNER TO keymgr_global;

DROP TABLE IF EXISTS "KeyMgr"."rawKeyHolderContacts";
CREATE TABLE "KeyMgr"."rawKeyHolderContacts" (
  AuthID bigint NOT NULL,
  PersonID bigint NOT NULL,
  PRIMARY KEY (AuthID, PersonID),
  CONSTRAINT KeyHolderContacts_AuthID_FK FOREIGN KEY (AuthID)
    REFERENCES "KeyMgr"."rawKeyAuthorizations" (AuthID) MATCH FULL
    ON UPDATE NO ACTION
    ON DELETE CASCADE,
  CONSTRAINT KeyHolderContacts_PersonID_FK FOREIGN KEY (PersonID)
    REFERENCES "KeyMgr"."rawPersons" (PersonID) MATCH FULL
    ON UPDATE NO ACTION
    ON DELETE CASCADE
);

ALTER TABLE IF EXISTS "KeyMgr"."rawKeyHolderContacts"
  OWNER TO keymgr_global;

DROP TABLE IF EXISTS "KeyMgr"."rawKeyAuthorizationMessages";
CREATE TABLE "KeyMgr"."rawKeyAuthorizationMessages" (
  AuthKeyMsgID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  KeyAuthID bigint NOT NULL,
  KeyID bigint NOT NULL,
  MessageTemplateID bigint NOT NULL,
  PRIMARY KEY (AuthKeyMsgID),
  CONSTRAINT KeyAuthMsg_AuthKeyMsg_ID_FK FOREIGN KEY (KeyAuthID, KeyID)
    REFERENCES "KeyMgr"."rawAuthorizedKeys" (AuthID, KeyID) 
    ON UPDATE NO ACTION
    ON DELETE CASCADE,
  CONSTRAINT KeyAuthMsg_MessageTemplateID_FK FOREIGN KEY (MessageTemplateID) 
    REFERENCES "KeyMgr"."rawMessageTemplates" (TemplateID) MATCH FULL
    ON UPDATE NO ACTION
    ON DELETE CASCADE
);  

ALTER TABLE IF EXISTS "KeyMgr"."rawKeyAuthorizationMessages"
  OWNER TO keymgr_global;
